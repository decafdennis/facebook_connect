<?php
// Developed by Dennis Stevense for Digital Deployment

define('FACEBOOK_CONNECT_APP_ID', 'facebook_connect_app_id');
define('FACEBOOK_CONNECT_SITE_LIKE_PATH', 'facebook_connect_site_like_path');
define('FACEBOOK_CONNECT_NODE_LIKE_BUTTONS', 'facebook_connect_node_like_buttons');
define('FACEBOOK_CONNECT_NODE_COMMENTS', 'facebook_connect_node_comments');

function facebook_connect_menu() {
  $items = array();
  
  $items['admin/settings/facebook_connect'] = array(
    'title' => 'Facebook connect',
    'description' => 'Configure Facebook integration with your site.',
    'page callback'  => 'drupal_get_form',
    'page arguments' => array('facebook_connect_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'facebook_connect.admin.inc',
  );
  
  return $items;
}

function facebook_connect_nodeapi(&$node, $op, $teaser = FALSE, $page = FALSE) {
  switch ($op) {
    case 'view':
      facebook_connect_node_view_alter($node, $node->content, $teaser, $page);
      break;
  }
}

function facebook_connect_node_view_alter($node, &$build, $teaser = FALSE, $page = FALSE) {
  if ($page && $node->comment && variable_get(FACEBOOK_CONNECT_NODE_COMMENTS, FALSE)) {
    $build['facebook_connect_comments'] = array(
      '#value' => facebook_connect_comments('node/' . $node->nid),
      '#weight' => 50,
    );
  }
}

function facebook_connect_block($op = 'list', $delta = 0, $form_values = array()) {
  switch ($op) {
    case 'list':
      $blocks = array();
      
      $blocks['login_box'] = array(
        'info' => t('Facebook connect login box'),
        'cache' => BLOCK_CACHE_GLOBAL,
      );
      
      $blocks['like_button_site'] = array(
        'info' => t('Facebook connect site like button'),
        'cache' => BLOCK_CACHE_GLOBAL,
      );
      
      return $blocks;
      
    case 'view':
      $function = 'facebook_connect_block_' . $delta . '_view';
    
      if (function_exists($function)) {
        return call_user_func($function);
      }
      else {
        return;
      }
  }
}

function facebook_connect_block_login_box_view() {
  return array(
    'content' => facebook_connect_login_box(),
  );
}

function facebook_connect_block_like_button_site_view() {
  return array(
    'content' => facebook_connect_like_button_site(),
  );
}

function facebook_connect_link($type, $object, $teaser = FALSE) {
  $links = array();
  
  if ($type == 'node' && variable_get(FACEBOOK_CONNECT_NODE_LIKE_BUTTONS, FALSE)) {
    $node = $object;
    
    $links['facebook_connect_like_button'] = array(
      'title' => facebook_connect_like_button('node/' . $node->nid, array('send' => TRUE)),
      'html' => TRUE,
    );
  }
  
  return $links;
}

function facebook_connect_link_alter(&$links, $node, $comment = NULL) {
  if (variable_get(FACEBOOK_CONNECT_NODE_COMMENTS, FALSE)) {
    unset($links['comment_comments']);
    unset($links['comment_new_comments']);
    unset($links['comment_add']);
    unset($links['comment_forbidden']);
  }
}

function facebook_connect_theme() {
  $theme = array();
  
  $theme['facebook_connect_login_box'] = array(
    'template' => 'facebook-connect-login-box',
  );
  
  $theme['facebook_connect_like_button'] = array(
    'arguments' => array('like_path' => NULL, 'options' => array()),
    'template' => 'facebook-connect-like-button',
  );
  
  $theme['facebook_connect_comments'] = array(
    'arguments' => array('comment_path' => NULL),
    'template' => 'facebook-connect-comments',
  );
  
  return $theme;
}

function facebook_connect_login_box() {
  drupal_add_css(drupal_get_path('module', 'facebook_connect') . '/facebook_connect.css');
  drupal_add_js(drupal_get_path('module', 'facebook_connect') . '/facebook_connect.js');
  
  $settings = array(
    'appID' => variable_get(FACEBOOK_CONNECT_APP_ID, NULL),
  );
  drupal_add_js(array('facebookConnect' => $settings), 'setting');

  return theme('facebook_connect_login_box');
}

function facebook_connect_like_button($like_path = NULL, $options = array()) {
  drupal_add_css(drupal_get_path('module', 'facebook_connect') . '/facebook_connect.css');
  drupal_add_js(drupal_get_path('module', 'facebook_connect') . '/facebook_connect.js');
  
  return theme('facebook_connect_like_button', $like_path, $options);
}

function facebook_connect_like_button_site($options = array()) {
  $like_path = variable_get(FACEBOOK_CONNECT_SITE_LIKE_PATH, NULL);
  
  if (empty($like_path)) {
    $like_path = '<front>';
  }
  
  return facebook_connect_like_button($like_path, $options);
}

function facebook_connect_comments($comment_path = NULL) {
  drupal_add_css(drupal_get_path('module', 'facebook_connect') . '/facebook_connect.css');
  drupal_add_js(drupal_get_path('module', 'facebook_connect') . '/facebook_connect.js');
  
  return theme('facebook_connect_comments', $comment_path);
}

function template_preprocess_facebook_connect_like_button(&$variables) {
  // Determine the URL to like from the path
  if (!empty($variables['like_path'])) {
    $variables['like_url'] = url($variables['like_path'], array('absolute' => TRUE));
  }
  else {
    $variables['like_url'] = NULL;
  }

  // Supply default options
  $variables['options'] += array(
    'send' => FALSE,
  );
  
  // Supply useful variables for rendering an fb:like element
  $variables['fb_href'] = !empty($variables['like_url']) ? $variables['like_url'] : '';
  $variables['fb_send'] = $variables['options']['send'] ? 'true' : 'false';
}

function template_preprocess_facebook_connect_comments(&$variables) {
  // Determine the URL to like from the path
  if (!empty($variables['comment_path'])) {
    $variables['comment_url'] = url($variables['comment_path'], array('absolute' => TRUE));
  }
  else {
    $variables['comment_url'] = NULL;
  }

  // Supply useful variables for rendering an fb:comments element
  $variables['fb_href'] = !empty($variables['comment_url']) ? $variables['comment_url'] : '';
}
